{
  "Enviroment": "test",

  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/",
    "ClientId": "483acf7e-32db-465c-9210-2327682b6eaf",
    "TenantId": "fc406171-ed8a-49b5-8e6c-fcc7f7915c54",
    "RedirectUri": "http://localhost:4200",
    "ClientSecret": "hmS8Q~TR67wEEFT1v49i4VcPOOjc-c-JV4UCtcgb",
    "scopes": "api://483acf7e-32db-465c-9210-2327682b6eaf/app"
  },
  "ConnectionStrings": {
    //  "mellon": "Server=localhost\\SQLEXPRESS01;Database=mellon_core; Integrated Security=SSPI; Encrypt=True;TrustServerCertificate=True",
    "mellon": "Server=erptestdbgr.mellongroup.com;Database=MELLON_INTERNAL_APPS; Integrated Security=false; User ID=erpportal;Password=1234ep;Encrypt=True;TrustServerCertificate=True"
  },
  "Endpoints": {
    "ERP": "http://192.168.20.45/ERPWEBServiceTest/dataAccess.asmx?WSDL",
    "ticker": 3600000, //3600000 30min
    "holidaysURL": "https://date.nager.at/api/v3/isTodayPublicHoliday",
    "COURIERS": {
      "GENIKI": {
        "url": "https://testvoucher.taxydromiki.gr/JobServices.asmx",
        "key": "EBFBC455-0C34-4962-A29F-7164B54279E9",
        "password": "101294@",
        "username": "npmellon"
      }
    }
   
  },
  "EmailSettings": {
    "EmailId": "do-not-reply@mellongroup.com",
    "Name": "Mellon Approval Process",
    "Password": "",
    "Host": "172.16.17.17",
    "Port": 25,
    "UseSSL": false,
    "overrideEmailIdTo": "mskazikis@gmail.com",
    "documentApprovalURL": "http://localhost:4200/document/",
    "ResendEmail": 2
  },
  "CorsOrigins": "http://localhost:4200",
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "MinimumLevel": {
      "Default": "Verbose", // we define the lowest level that our application will log
      "Override": { // Here we can override any system loggers, and ignore them unless they reach a specified log level
        "Microsoft": "Warning", //any logs from a "Microsoft" class will not be written, unless they are of level "Warning" and above.
        "System": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.AspNetCore.Hosting": "Information",
        "Microsoft.EntityFrameworkCore.Database": "Warning",
        "Microsoft.Identity.Web": "Information",
        "Microsoft.AspNetCore.Authentication.JwtBearer": "Information",
        "Microsoft.AspNetCore.Authorization": "Information"
      }
    },
    "WriteTo": [
      {
        "Name": "Console", //A sink to log on console
        "Args": { //Any  arguments specific to the sink
          "outputTemplate": "{Timestamp:HH:mm:ss.fff} [{Level:u3}] {RequestId} {SourceContext} {Message}{NewLine}{Exception}"
        }
      },
      {
        "Name": "File", //A sink to log on files
        "Args": { //Any  arguments specific to the sink
          "path": "Logs/log.txt", //Here you must provide the directory that the logs will be placed and a name for the log
          "outputTemplate": "{Timestamp:HH:mm:ss.fff} [{Level:u3}] {RequestId} {SourceContext:l} {Message}{NewLine}{Exception}",
          "rollingInterval": "Day", // Create a new file each day
          "fileSizeLimitBytes": "2000000", // The maximum size of  each file (around 2mb)
          "rollOnFileSizeLimit": true, // When max size is reached create another file
          //"restrictedToMinimumLevel": "Warning", //Overrides for specific sink
          "retainedFileCountLimit": null // How many files can be added, before previous are deleted (null = never delete a file)
        }
      }
    ]
  }
}
